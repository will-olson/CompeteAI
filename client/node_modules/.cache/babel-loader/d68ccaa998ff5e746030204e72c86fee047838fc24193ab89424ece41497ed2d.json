{"ast":null,"code":"var _jsxFileName = \"/Users/willolson/Development/StockMktAI/client/src/components/FinancialAnalysisPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, Box, Grid, Button, Card, CardContent, CircularProgress, Tabs, Tab, Accordion, AccordionSummary, AccordionDetails, Dialog, DialogTitle, DialogContent } from '@mui/material';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell } from 'recharts';\nimport { Upload as UploadIcon, Analytics as AnalyticsIcon, Download as DownloadIcon, ExpandMore as ExpandMoreIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialAnalysisPage = () => {\n  _s();\n  // State Management\n  const [file, setFile] = useState(null);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [visualizations, setVisualizations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState(0);\n  const [expandedPanel, setExpandedPanel] = useState(false);\n  const [selectedVisualization, setSelectedVisualization] = useState(null);\n\n  // Analysis Types\n  const analysisTypes = [{\n    label: 'Comprehensive',\n    value: 'comprehensive'\n  }, {\n    label: 'Descriptive',\n    value: 'descriptive'\n  }, {\n    label: 'Advanced',\n    value: 'advanced'\n  }];\n\n  // File Upload Handler\n  const handleFileUpload = event => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n  };\n\n  // Perform Analysis\n  const performAnalysis = useCallback(async (analysisType = 'comprehensive') => {\n    if (!file) {\n      alert('Please upload a file first');\n      return;\n    }\n    setLoading(true);\n    try {\n      // Create FormData for file upload\n      const formData = new FormData();\n      formData.append('file', file);\n\n      // Perform analysis\n      const response = await axios.post('/api/financial-analysis', {\n        data_source: file.name,\n        type: analysisType\n      }, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n\n      // Set analysis results\n      setAnalysisResults(response.data);\n\n      // Fetch and process visualizations\n      if (response.data.visualizations) {\n        const visualizationPromises = Object.entries(response.data.visualizations).map(async ([key, path]) => {\n          const imgResponse = await axios.get(`/api/visualizations/${path.split('/').pop()}`, {\n            responseType: 'blob'\n          });\n          return [key, URL.createObjectURL(imgResponse.data)];\n        });\n        const visualizationResults = await Promise.all(visualizationPromises);\n        setVisualizations(Object.fromEntries(visualizationResults));\n      }\n    } catch (error) {\n      console.error('Analysis failed', error);\n      alert('Analysis failed. Please check your file and try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [file]);\n\n  // Download Report\n  const downloadReport = useCallback(async reportType => {\n    try {\n      const response = await axios.get(`/api/download/${reportType}`, {\n        responseType: 'blob'\n      });\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `financial_report_${reportType}`);\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.error('Download failed', error);\n      alert('Download failed. Please try again.');\n    }\n  }, []);\n\n  // Visualization Preview Dialog\n  const VisualizationPreview = ({\n    visualization,\n    onClose\n  }) => /*#__PURE__*/_jsxDEV(Dialog, {\n    open: !!visualization,\n    onClose: onClose,\n    maxWidth: \"md\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Visualization Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: visualization,\n        alt: \"Visualization Preview\",\n        style: {\n          width: '100%',\n          maxHeight: '600px',\n          objectFit: 'contain'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n\n  // Render Insights Section\n  const renderInsightsSection = () => {\n    var _analysisResults$ai_i, _analysisResults$ai_i2, _analysisResults$ai_i3, _analysisResults$ai_i4, _analysisResults$ai_i5, _analysisResults$ai_i6, _analysisResults$ai_i7, _analysisResults$ai_i8, _analysisResults$ai_i9;\n    if (!analysisResults) return null;\n\n    // Structured insights rendering\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: expandedPanel,\n      onChange: () => setExpandedPanel(!expandedPanel),\n      children: [/*#__PURE__*/_jsxDEV(AccordionSummary, {\n        expandIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 23\n        }, this),\n        \"aria-controls\": \"insights-content\",\n        id: \"insights-header\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"AI-Powered Financial Insights\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AccordionDetails, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Market Overview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: ((_analysisResults$ai_i = analysisResults.ai_insights) === null || _analysisResults$ai_i === void 0 ? void 0 : (_analysisResults$ai_i2 = _analysisResults$ai_i.key_sections) === null || _analysisResults$ai_i2 === void 0 ? void 0 : (_analysisResults$ai_i3 = _analysisResults$ai_i2.market_overview) === null || _analysisResults$ai_i3 === void 0 ? void 0 : _analysisResults$ai_i3.join(' ')) || 'No overview available'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Key Trends\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: ((_analysisResults$ai_i4 = analysisResults.ai_insights) === null || _analysisResults$ai_i4 === void 0 ? void 0 : (_analysisResults$ai_i5 = _analysisResults$ai_i4.key_sections) === null || _analysisResults$ai_i5 === void 0 ? void 0 : (_analysisResults$ai_i6 = _analysisResults$ai_i5.key_trends) === null || _analysisResults$ai_i6 === void 0 ? void 0 : _analysisResults$ai_i6.join(' ')) || 'No trends identified'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  children: \"Investment Strategies\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  children: ((_analysisResults$ai_i7 = analysisResults.ai_insights) === null || _analysisResults$ai_i7 === void 0 ? void 0 : (_analysisResults$ai_i8 = _analysisResults$ai_i7.key_sections) === null || _analysisResults$ai_i8 === void 0 ? void 0 : (_analysisResults$ai_i9 = _analysisResults$ai_i8.investment_strategies) === null || _analysisResults$ai_i9 === void 0 ? void 0 : _analysisResults$ai_i9.join(' ')) || 'No strategies available'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render Visualizations\n  const renderVisualizations = () => {\n    if (!visualizations) return null;\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: Object.entries(visualizations).map(([key, src]) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: key.replace(/_/g, ' ').toUpperCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: src,\n              alt: key,\n              style: {\n                width: '100%',\n                height: '300px',\n                objectFit: 'contain',\n                cursor: 'pointer'\n              },\n              onClick: () => setSelectedVisualization(src)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Financial Analysis Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        component: \"label\",\n        startIcon: /*#__PURE__*/_jsxDEV(UploadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 22\n        }, this),\n        children: [\"Upload Financial Data\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          hidden: true,\n          accept: \".csv,.xlsx,.json\",\n          onChange: handleFileUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          ml: 2\n        },\n        children: file.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: (e, newValue) => setActiveTab(newValue),\n        sx: {\n          ml: 2\n        },\n        children: analysisTypes.map((type, index) => /*#__PURE__*/_jsxDEV(Tab, {\n          label: type.label,\n          onClick: () => performAnalysis(type.value)\n        }, type.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        my: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 9\n    }, this), analysisResults && renderInsightsSection(), visualizations && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        gutterBottom: true,\n        children: \"Financial Visualizations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), renderVisualizations()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 9\n    }, this), analysisResults && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 2,\n        display: 'flex',\n        gap: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 24\n        }, this),\n        onClick: () => downloadReport('excel'),\n        children: \"Download Excel Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        startIcon: /*#__PURE__*/_jsxDEV(DownloadIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 24\n        }, this),\n        onClick: () => downloadReport('insights'),\n        children: \"Download AI Insights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(VisualizationPreview, {\n      visualization: selectedVisualization,\n      onClose: () => setSelectedVisualization(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n};\n_s(FinancialAnalysisPage, \"jSgwf4fh+rbjG2rwnDmmp/P1VTU=\");\n_c = FinancialAnalysisPage;\nexport default FinancialAnalysisPage;\nvar _c;\n$RefreshReg$(_c, \"FinancialAnalysisPage\");","map":{"version":3,"names":["React","useState","useCallback","useMemo","axios","Container","Typography","Box","Grid","Button","Card","CardContent","CircularProgress","Tabs","Tab","Accordion","AccordionSummary","AccordionDetails","Dialog","DialogTitle","DialogContent","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","PieChart","Pie","Cell","Upload","UploadIcon","Analytics","AnalyticsIcon","Download","DownloadIcon","ExpandMore","ExpandMoreIcon","jsxDEV","_jsxDEV","FinancialAnalysisPage","_s","file","setFile","analysisResults","setAnalysisResults","visualizations","setVisualizations","loading","setLoading","activeTab","setActiveTab","expandedPanel","setExpandedPanel","selectedVisualization","setSelectedVisualization","analysisTypes","label","value","handleFileUpload","event","uploadedFile","target","files","performAnalysis","analysisType","alert","formData","FormData","append","response","post","data_source","name","type","headers","data","visualizationPromises","Object","entries","map","key","path","imgResponse","get","split","pop","responseType","URL","createObjectURL","visualizationResults","Promise","all","fromEntries","error","console","downloadReport","reportType","url","window","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","VisualizationPreview","visualization","onClose","open","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","width","maxHeight","objectFit","renderInsightsSection","_analysisResults$ai_i","_analysisResults$ai_i2","_analysisResults$ai_i3","_analysisResults$ai_i4","_analysisResults$ai_i5","_analysisResults$ai_i6","_analysisResults$ai_i7","_analysisResults$ai_i8","_analysisResults$ai_i9","expanded","onChange","expandIcon","id","variant","container","spacing","item","xs","ai_insights","key_sections","market_overview","join","key_trends","investment_strategies","renderVisualizations","md","replace","toUpperCase","height","cursor","onClick","gutterBottom","sx","display","alignItems","mb","component","startIcon","hidden","accept","ml","e","newValue","index","justifyContent","my","mt","gap","_c","$RefreshReg$"],"sources":["/Users/willolson/Development/StockMktAI/client/src/components/FinancialAnalysisPage.js"],"sourcesContent":["import React, { useState, useCallback, useMemo } from 'react';\nimport axios from 'axios';\nimport { \n  Container, \n  Typography, \n  Box, \n  Grid, \n  Button, \n  Card, \n  CardContent, \n  CircularProgress, \n  Tabs, \n  Tab,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Dialog,\n  DialogTitle,\n  DialogContent\n} from '@mui/material';\nimport { \n  BarChart, \n  Bar, \n  XAxis, \n  YAxis, \n  Tooltip, \n  Legend, \n  ResponsiveContainer,\n  PieChart, \n  Pie, \n  Cell\n} from 'recharts';\nimport { \n  Upload as UploadIcon, \n  Analytics as AnalyticsIcon,\n  Download as DownloadIcon,\n  ExpandMore as ExpandMoreIcon\n} from '@mui/icons-material';\n\nconst FinancialAnalysisPage = () => {\n  // State Management\n  const [file, setFile] = useState(null);\n  const [analysisResults, setAnalysisResults] = useState(null);\n  const [visualizations, setVisualizations] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState(0);\n  const [expandedPanel, setExpandedPanel] = useState(false);\n  const [selectedVisualization, setSelectedVisualization] = useState(null);\n\n  // Analysis Types\n  const analysisTypes = [\n    { label: 'Comprehensive', value: 'comprehensive' },\n    { label: 'Descriptive', value: 'descriptive' },\n    { label: 'Advanced', value: 'advanced' }\n  ];\n\n  // File Upload Handler\n  const handleFileUpload = (event) => {\n    const uploadedFile = event.target.files[0];\n    setFile(uploadedFile);\n  };\n\n  // Perform Analysis\n  const performAnalysis = useCallback(async (analysisType = 'comprehensive') => {\n    if (!file) {\n      alert('Please upload a file first');\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // Create FormData for file upload\n      const formData = new FormData();\n      formData.append('file', file);\n\n      // Perform analysis\n      const response = await axios.post('/api/financial-analysis', \n        { \n          data_source: file.name,\n          type: analysisType \n        },\n        {\n          headers: { 'Content-Type': 'multipart/form-data' }\n        }\n      );\n\n      // Set analysis results\n      setAnalysisResults(response.data);\n\n      // Fetch and process visualizations\n      if (response.data.visualizations) {\n        const visualizationPromises = Object.entries(response.data.visualizations).map(\n          async ([key, path]) => {\n            const imgResponse = await axios.get(`/api/visualizations/${path.split('/').pop()}`, {\n              responseType: 'blob'\n            });\n            return [key, URL.createObjectURL(imgResponse.data)];\n          }\n        );\n\n        const visualizationResults = await Promise.all(visualizationPromises);\n        setVisualizations(Object.fromEntries(visualizationResults));\n      }\n    } catch (error) {\n      console.error('Analysis failed', error);\n      alert('Analysis failed. Please check your file and try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [file]);\n\n  // Download Report\n  const downloadReport = useCallback(async (reportType) => {\n    try {\n      const response = await axios.get(`/api/download/${reportType}`, {\n        responseType: 'blob'\n      });\n      \n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', `financial_report_${reportType}`);\n      document.body.appendChild(link);\n      link.click();\n    } catch (error) {\n      console.error('Download failed', error);\n      alert('Download failed. Please try again.');\n    }\n  }, []);\n\n  // Visualization Preview Dialog\n  const VisualizationPreview = ({ visualization, onClose }) => (\n    <Dialog open={!!visualization} onClose={onClose} maxWidth=\"md\" fullWidth>\n      <DialogTitle>Visualization Preview</DialogTitle>\n      <DialogContent>\n        <img \n          src={visualization} \n          alt=\"Visualization Preview\" \n          style={{ width: '100%', maxHeight: '600px', objectFit: 'contain' }}\n        />\n      </DialogContent>\n    </Dialog>\n  );\n\n  // Render Insights Section\n  const renderInsightsSection = () => {\n    if (!analysisResults) return null;\n\n    // Structured insights rendering\n    return (\n      <Accordion \n        expanded={expandedPanel}\n        onChange={() => setExpandedPanel(!expandedPanel)}\n      >\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"insights-content\"\n          id=\"insights-header\"\n        >\n          <Typography variant=\"h6\">AI-Powered Financial Insights</Typography>\n        </AccordionSummary>\n        <AccordionDetails>\n          <Grid container spacing={2}>\n            {/* Market Overview */}\n            <Grid item xs={12}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\">Market Overview</Typography>\n                  <Typography variant=\"body2\">\n                    {analysisResults.ai_insights?.key_sections?.market_overview?.join(' ') || 'No overview available'}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n\n            {/* Key Trends */}\n            <Grid item xs={12}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\">Key Trends</Typography>\n                  <Typography variant=\"body2\">\n                    {analysisResults.ai_insights?.key_sections?.key_trends?.join(' ') || 'No trends identified'}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n\n            {/* Investment Strategies */}\n            <Grid item xs={12}>\n              <Card>\n                <CardContent>\n                  <Typography variant=\"h6\">Investment Strategies</Typography>\n                  <Typography variant=\"body2\">\n                    {analysisResults.ai_insights?.key_sections?.investment_strategies?.join(' ') || 'No strategies available'}\n                  </Typography>\n                </CardContent>\n              </Card>\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n    );\n  };\n\n  // Render Visualizations\n  const renderVisualizations = () => {\n    if (!visualizations) return null;\n\n    return (\n      <Grid container spacing={2}>\n        {Object.entries(visualizations).map(([key, src]) => (\n          <Grid item xs={12} md={6} key={key}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\">{key.replace(/_/g, ' ').toUpperCase()}</Typography>\n                <img \n                  src={src} \n                  alt={key} \n                  style={{ \n                    width: '100%', \n                    height: '300px', \n                    objectFit: 'contain',\n                    cursor: 'pointer'\n                  }}\n                  onClick={() => setSelectedVisualization(src)}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  };\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography variant=\"h4\" gutterBottom>\n        Financial Analysis Dashboard\n      </Typography>\n\n      {/* File Upload and Analysis Controls */}\n      <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>\n        <Button\n          variant=\"contained\"\n          component=\"label\"\n          startIcon={<UploadIcon />}\n        >\n          Upload Financial Data\n          <input\n            type=\"file\"\n            hidden\n            accept=\".csv,.xlsx,.json\"\n            onChange={handleFileUpload}\n          />\n        </Button>\n        \n        {file && (\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\n            {file.name}\n          </Typography>\n        )}\n\n        {/* Analysis Type Tabs */}\n        <Tabs \n          value={activeTab} \n          onChange={(e, newValue) => setActiveTab(newValue)}\n          sx={{ ml: 2 }}\n        >\n          {analysisTypes.map((type, index) => (\n            <Tab \n              key={type.value} \n              label={type.label}\n              onClick={() => performAnalysis(type.value)}\n            />\n          ))}\n        </Tabs>\n      </Box>\n\n      {/* Loading Indicator */}\n      {loading && (\n        <Box sx={{ display: 'flex', justifyContent: 'center', my: 2 }}>\n          <CircularProgress />\n        </Box>\n      )}\n\n      {/* Insights Section */}\n      {analysisResults && renderInsightsSection()}\n\n      {/* Visualizations */}\n      {visualizations && (\n        <Box sx={{ mt: 2 }}>\n          <Typography variant=\"h5\" gutterBottom>\n            Financial Visualizations\n          </Typography>\n          {renderVisualizations()}\n        </Box>\n      )}\n\n      {/* Download Options */}\n      {analysisResults && (\n        <Box sx={{ mt: 2, display: 'flex', gap: 2 }}>\n          <Button\n            variant=\"outlined\"\n            startIcon={<DownloadIcon />}\n            onClick={() => downloadReport('excel')}\n          >\n            Download Excel Report\n          </Button>\n          <Button\n            variant=\"outlined\"\n            startIcon={<DownloadIcon />}\n            onClick={() => downloadReport('insights')}\n          >\n            Download AI Insights\n          </Button>\n        </Box>\n      )}\n\n      {/* Visualization Preview Dialog */}\n      <VisualizationPreview \n        visualization={selectedVisualization}\n        onClose={() => setSelectedVisualization(null)}\n      />\n    </Container>\n  );\n};\n\nexport default FinancialAnalysisPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}